name: Release

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  upload:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js v18
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
    - uses: actions/cache@v3
      with:
        path: ./node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('./package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - uses: actions/cache@v3
      with:
        path: ./vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('./composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-composer-
    - uses: shivammathur/setup-php@v2
      with:
        php-version: 8.0
        extensions: zip, imagick, gd
    - name: Install npm
      run: npm i
    - name: Install composer
      run: composer install --no-progress --no-suggest
    - name: Run build
      run: npm run build
    - name: Install composer optimized
      run: composer install --no-dev --no-progress --no-suggest --optimize-autoloader
    - name: Create archive
      run: zip -r flynt-${{ github.event.release.tag_name || 'bundled' }}.zip ./ -x './node_modules/*' './**/.git/*'
    - name: Create download
      if: ${{ github.event.release.upload_url }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: ./flynt-${{ github.event.release.tag_name }}.zip
        asset_name: flynt-${{ github.event.release.tag_name }}.zip
        asset_content_type: application/zip
    - name: Create download
      if: ${{ !github.event.release.upload_url }}
      uses: actions/upload-artifact@v3
      with:
        name: flynt-bundled
        path: ./flynt-bundled.zip
